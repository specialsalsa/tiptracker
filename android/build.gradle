// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    ext {
        googlePlayServicesVersion = "17.0.0" // added this (push notifications)
        // firebaseVersion = "17.3.4" // added this
        buildToolsVersion = "30.0.2"
        // buildToolsVersion = "29.0.3"
        minSdkVersion = 21
        compileSdkVersion = 31
        targetSdkVersion = 31
        supportLibVersion = "28.0.0" // might be wrong version
        ndkVersion = "21.4.7075529"
        // ndkVersion = "20.1.5948944"
        // kotlinVersion = "1.5.20"
    }
    repositories {
        google()
        mavenCentral()
    }
    dependencies {
        classpath("com.android.tools.build:gradle:4.2.2")
        // classpath('com.android.tools.build:gradle:4.0.1')
        classpath ('com.google.gms:google-services:4.3.3') // might not need this
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    repositories {

        def REPOSITORY_URL = "https://repo1.maven.org/maven2"
        all { ArtifactRepository repo ->
            if(repo instanceof MavenArtifactRepository){
                def url = repo.url.toString()
                if (url.startsWith('https://jcenter.bintray.com/')) {
                    project.logger.lifecycle "Repository ${repo.url} replaced by $REPOSITORY_URL."
                    remove repo
                }
            }
        }

        maven { 
            url REPOSITORY_URL
        }

        mavenCentral()
        mavenLocal()
        maven {
            // All of React Native (JS, Obj-C sources, Android binaries) is installed from npm
            url("$rootDir/../node_modules/react-native/android")
        }
        maven {
            // Android JSC is installed from npm
            url("$rootDir/../node_modules/jsc-android/dist")
        }
        gradlePluginPortal()
        gradlePluginPortal() {
            content {
                includeModule("cn.aigestudio.wheelpicker", "WheelPicker")
            }
        }

        google()
        maven { url 'https://www.jitpack.io' }
    }
}
